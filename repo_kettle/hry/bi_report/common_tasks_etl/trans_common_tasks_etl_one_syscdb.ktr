<transformation>
  <info>
    <name>trans_common_tasks_etl_one_syscdb</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;hry&#x2f;bi_report&#x2f;common_tasks_etl</directory>
    <parameters>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
<metrics-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2017&#x2f;01&#x2f;23 14&#x3a;35&#x3a;12.929</created_date>
  <modified_user>-</modified_user>
  <modified_date>2017&#x2f;02&#x2f;17 16&#x3a;57&#x3a;05.117</modified_date>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>bidb</name>
    <server>&#x24;&#x7b;bidb_hostname&#x7d;</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>&#x24;&#x7b;bidb_database&#x7d;</database>
    <port>&#x24;&#x7b;bidb_port&#x7d;</port>
    <username>&#x24;&#x7b;bidb_username&#x7d;</username>
    <password>&#x24;&#x7b;bidb_password&#x7d;</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>&#x24;&#x7b;bidb_port&#x7d;</attribute></attribute>
      <attribute><code>PRESERVE_RESERVED_WORD_CASE</code><attribute>N</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_TIMESTAMP_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Table input&#x67e5;&#x8be2;&#x76ee;&#x6807;&#x8868;</from><to>&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b57;&#x6bb5;&#x5224;&#x65ad;&#x63d2;&#x5165;&#x66f4;&#x65b0; 2</to><enabled>Y</enabled> </hop>
  <hop> <from>Write to log &#x63d2;&#x5165;</from><to>&#x63d2;&#x5165;&#x6570;&#x636e;&#x6e90;&#x8868;</to><enabled>N</enabled> </hop>
  <hop> <from>Write to log &#x66f4;&#x65b0;</from><to>Insert &#x2f; Update_Variable&#x6e90;&#x8868;</to><enabled>N</enabled> </hop>
  <hop> <from>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;insert</from><to>Write to log &#x63d2;&#x5165;</to><enabled>N</enabled> </hop>
  <hop> <from>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;update</from><to>Write to log &#x66f4;&#x65b0;</to><enabled>N</enabled> </hop>
  <hop> <from>&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b57;&#x6bb5;&#x5224;&#x65ad;&#x63d2;&#x5165;&#x66f4;&#x65b0; 2</from><to>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;insert</to><enabled>Y</enabled> </hop>
  <hop> <from>&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b57;&#x6bb5;&#x5224;&#x65ad;&#x63d2;&#x5165;&#x66f4;&#x65b0; 2</from><to>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;update</to><enabled>Y</enabled> </hop>
  <hop> <from>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;update</from><to>Insert &#x2f; Update_Variable&#x6e90;&#x8868;</to><enabled>Y</enabled> </hop>
  <hop> <from>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;insert</from><to>&#x63d2;&#x5165;&#x6570;&#x636e;&#x6e90;&#x8868;</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>Insert &#x2f; Update_Variable&#x6e90;&#x8868;</name>
    <type>insertupdatevar</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bidb</connection>
    <commit>100</commit>
    <update_bypassed>N</update_bypassed>
    <lookup>
      <schema/>
      <table>&#x24;&#x7b;BAK_TABLE_NAME&#x7d;</table>
      <key>
        <name>&#x24;&#x7b;IDX&#x7d;</name>
        <field>&#x24;&#x7b;IDX&#x7d;</field>
        <condition>&#x3d;</condition>
        <name2/>
      </key>
    </lookup>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>940</xloc>
      <yloc>372</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Table input&#x67e5;&#x8be2;&#x76ee;&#x6807;&#x8868;</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bidb</connection>
    <sql>&#x24;&#x7b;SOURCE_TABLE_MAX&#x7d;&#xd;&#xa;&#xd;&#xa;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>170</xloc>
      <yloc>139</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Write to log &#x63d2;&#x5165;</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <loglevel>log_level_minimal</loglevel>
      <displayHeader>Y</displayHeader>
      <limitRows>N</limitRows>
      <limitRowsNumber>0</limitRowsNumber>
      <logmessage>&#x2a;&#x2a;&#x2a;&#x63d2;&#x5165;&#x2a;&#x2a;&#x2a;</logmessage>
    <fields>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>969</xloc>
      <yloc>63</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Write to log &#x66f4;&#x65b0;</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <loglevel>log_level_minimal</loglevel>
      <displayHeader>Y</displayHeader>
      <limitRows>N</limitRows>
      <limitRowsNumber>0</limitRowsNumber>
      <logmessage>&#x2a;&#x2a;&#x2a;&#x66f4;&#x65b0;&#x2a;&#x2a;&#x2a;</logmessage>
    <fields>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>636</xloc>
      <yloc>473</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;insert</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[private RowMetaInterface deselectRowMeta;
private int[] removenrs = new int[1];
private String delName=null;
private Boolean isDel=false;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
	  setOutputDone();
	  return false;
	}

    if (first){
		first = false;
	
		isDel = "1".equals(getVariable("ISDEL")) ? Boolean.TRUE : Boolean.FALSE;	
		// 删除多余的字段
		delName = isEmpty(getVariable("CONDITION")) ? null : getVariable("CONDITION");


		if(isDel && null != delName && delName.length()>1){

			//删除元数据
			deselectRowMeta = data.outputRowMeta.clone();	
		    removenrs[0] = deselectRowMeta.indexOfValue(delName);
            logBasic("删除字段为: "+ delName+" , "+ removenrs[0]);  
			deselectRowMeta.removeValueMeta(delName);  
		}
		
	}

	// It is always safest to call createOutputRow() to ensure that your output row's Object[] is large
    // enough to handle any new fields you are creating in this step.
    r = createOutputRow(r, data.outputRowMeta.size());

//删除数据
if(isDel && !isEmpty(delName)){
	 //删除之后元数据转入	
	r = removeItems(r,removenrs); 
	putRow(deselectRowMeta, r); 
}else{
	putRow(data.outputRowMeta, r); 
}
	return true;
	
}


private  Object[] removeItems(Object[] rowData, int[] index) {
    Object[] data = new Object[rowData.length - index.length];

    int count = data.length - 1;
    int removenr = index.length - 1;
    for ( int i = rowData.length - 1; i >= 0; i-- ) {
      if ( removenr >= 0 && i == index[removenr] ) {
        removenr--;
      } else {
        data[count] = rowData[i];
        count--;
      }
    }

    return data;
}

private Boolean isEmpty(String str){
if(str == null || str.length()==0){
	return true;
}
	return false;
}]]></class_source>
        </definition>
    </definitions>
    <fields>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>529</xloc>
      <yloc>114</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;update</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[private RowMetaInterface deselectRowMeta;
private int[] removenrs = new int[1];
private String delName=null;
private Boolean isDel=false;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();

	if (r == null) {
	  setOutputDone();
	  return false;
	}

    if (first){
		first = false;
	
		isDel = "1".equals(getVariable("ISDEL")) ? Boolean.TRUE : Boolean.FALSE;	
		// 删除多余的字段
		delName = isEmpty(getVariable("CONDITION")) ? null : getVariable("CONDITION");


		if(isDel && null != delName && delName.length()>1){

			//删除元数据
			deselectRowMeta = data.outputRowMeta.clone();	
		    removenrs[0] = deselectRowMeta.indexOfValue(delName);
            logBasic("删除字段为: "+ delName+" , "+ removenrs[0]);  
			deselectRowMeta.removeValueMeta(delName);  
		}
		
	}

	// It is always safest to call createOutputRow() to ensure that your output row's Object[] is large
    // enough to handle any new fields you are creating in this step.
    r = createOutputRow(r, data.outputRowMeta.size());

//删除数据
if(isDel && !isEmpty(delName)){
	 //删除之后元数据转入	
	r = removeItems(r,removenrs); 
	putRow(deselectRowMeta, r); 
}else{
	putRow(data.outputRowMeta, r); 
}
	return true;
	
}


private  Object[] removeItems(Object[] rowData, int[] index) {
    Object[] data = new Object[rowData.length - index.length];

    int count = data.length - 1;
    int removenr = index.length - 1;
    for ( int i = rowData.length - 1; i >= 0; i-- ) {
      if ( removenr >= 0 && i == index[removenr] ) {
        removenr--;
      } else {
        data[count] = rowData[i];
        count--;
      }
    }

    return data;
}

private Boolean isEmpty(String str){
if(str == null || str.length()==0){
	return true;
}
	return false;
}]]></class_source>
        </definition>
    </definitions>
    <fields>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>524</xloc>
      <yloc>262</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>&#x63d2;&#x5165;&#x6570;&#x636e;&#x6e90;&#x8868;</name>
    <type>TableOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bidb</connection>
    <schema/>
    <table>&#x24;&#x7b;BAK_TABLE_NAME&#x7d;</table>
    <commit>1000</commit>
    <truncate>N</truncate>
    <ignore_errors>N</ignore_errors>
    <use_batch>Y</use_batch>
    <specify_fields>N</specify_fields>
    <partitioning_enabled>N</partitioning_enabled>
    <partitioning_field/>
    <partitioning_daily>N</partitioning_daily>
    <partitioning_monthly>Y</partitioning_monthly>
    <tablename_in_field>N</tablename_in_field>
    <tablename_field/>
    <tablename_in_table>Y</tablename_in_table>
    <return_keys>N</return_keys>
    <return_field/>
    <fields>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>908</xloc>
      <yloc>201</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b57;&#x6bb5;&#x5224;&#x65ad;&#x63d2;&#x5165;&#x66f4;&#x65b0; 2</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;

private RowSet insertdata = null;
private RowSet updatedata = null;
private String cond=null;
private String cond2=null;
private Long cond2Value=null;
Long maxid=0L;
Long maxid2=0L;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] r = getRow();
    if (r == null) {
	  setOutputDone();
	  return false;
	}




	
	if (first){
		first = false;	
	cond = getVariable("CONDITION");
	cond2 = getVariable("CONDITION2");
    cond2Value =  isEmpty(cond2) ? null : Long.valueOf(getVariable(cond2));


// logBasic("********变量111111111*****"+getVariable("CONDITION")); logBasic("********变量222222222*****"+getVariable("CONDITION2"));

		// logBasic("********************判断插入更新捷操作***********************************");
		insertdata= findTargetRowSet("insertdata");
		updatedata= findTargetRowSet("updatedata");
		//查看变量  logs("MAX_ID1");logs("MAX_ID2");logs("MAX_ID3");
      	maxid =  Long.valueOf( isEmpty(getVariable("MAX_ID1")) ? "0" : getVariable(getVariable("MAX_ID1")));
      	maxid2 = Long.valueOf( isEmpty(getVariable("MAX_ID2")) ? "0" : getVariable(getVariable("MAX_ID2")));
	}

	// It is always safest to call createOutputRow() to ensure that your output row's Object[] is large
    // enough to handle any new fields you are creating in this step.
    r = createOutputRow(r, data.outputRowMeta.size());


	Long cond1Value =  isEmpty(cond) ? null : get(Fields.In, cond).getInteger(r);

// logDebug("****条件   \""+getVariable("CONDITION")+"\" : "+cond1Value+" ,  \""+ getVariable("CONDITION2") +"\" : "+cond2Value);
	if(cond1Value==null || cond2Value ==null || cond1Value>cond2Value){
	// if(isEmpty(cond) || id>maxid2){
		putRowTo(data.outputRowMeta, r,insertdata);	
	}else{
		putRowTo(data.outputRowMeta, r,updatedata);
	}

	// Send the row on to the next step.
  //  putRow(data.outputRowMeta, r);

	return true;
}

private Boolean isEmpty(String str){
if(str == null || str.length()==0){
	return true;
}
	return false;
}

//打印日志
private void logs(String str){
if(!isEmpty(getVariable(str))){
		logBasic(" 获取参数值为 ： " + getVariable(str)+ "  ： " + (isEmpty(getVariable(str)) ? null :getVariable(getVariable(str))) );
}
}
]]></class_source>
        </definition>
    </definitions>
    <fields>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps><target_step><step_tag>insertdata</step_tag>
<step_name>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;insert</step_name>
<step_description/>
</target_step><target_step><step_tag>updatedata</step_tag>
<step_name>&#x5220;&#x9664;&#x591a;&#x4f59;&#x5b57;&#x6bb5;update</step_name>
<step_description/>
</target_step></target_steps><usage_parameters></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>314</xloc>
      <yloc>146</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>

</transformation>
